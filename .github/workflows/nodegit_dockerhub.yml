name: NodeJS CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs: 
  build: 
    runs-on: ubuntu-latest 

    strategy:
      matrix: 
        # os: [ubuntu-18.04, ubuntu-20.04]
        # node-version: [12.x, 14.x]
        os: [ubuntu-18.04]
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use NodeJs ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with: 
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci 
      - run: npm run build --if-present 
      - run: npm test
      - run: echo "My OS is - ${{ matrix.os }}"
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}     

      - name: Setup Docker Buildx
        id: Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with: 
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nodegit_dockerhub:latest_${{ matrix.os }}_${{ matrix.node-version}}

      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  Deploy: 
    name: Docker Pull & Run from DockerHub. 
    needs: build
    runs-on: ubuntu-latest 

    steps: 
      - name: multiple command
        uses: appleboy/ssh-action@master
        # env: 
        #   RepoName: ${{ secrets.DOCKER_HUB_USERNAME }}/nodegit_dockerhub
        #   RepoTag: ${{ secrets.DOCKER_HUB_USERNAME }}/nodegit_dockerhub:latest_${{ matrix.os }}_${{ matrix.node-version}}
        #   ContainerName: "nodegit_dockerhub"

        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: RepoName,RepoTag,ContainerName
          script: | 
            # echo "$RepoName"
            # echo "$RepoTag"
            # echo "$ContainerName"

            docker ps -a  
            docker stop nodegit_dockerhub
            docker rm nodegit_dockerhub
            docker pull jerrybopara/nodegit_dockerhub
            docker run --detach --name nodegit_dockerhub -p 5000:5000 jerrybopara/nodegit_dockerhub