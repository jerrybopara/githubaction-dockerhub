# Reponame - jerrynoderepo
# 368226836323.dkr.ecr.us-west-1.amazonaws.com/jerrynoderepo
# 

name: AWS ECS Github Actions Deployment
on:
  push:
    branches:
      - main
      - qa

jobs:
  docker-build-push-deploy:
    name: Docker build, push and deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Code
        uses: actions/checkout@v2

      - name: Get Branch Name
        id: vars
        run: echo ::set-output name=stage::${GITHUB_REF#refs/*/}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to Amazon ECR
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          IMAGE_TAG: ${{steps.vars.outputs.stage}}-${{ github.sha }}
        run: |
          docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}} .
          docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Render Amazon ECS task definition
        id: nodeapp-container-id
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition/nodeapp-${{steps.vars.outputs.stage}}.json        
          container-name: nodeapp-container-${{steps.vars.outputs.stage}}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{steps.vars.outputs.stage}}-${{ github.sha }}

      - name: Deploy to Amazon ECS Service
        env:
          # ECS_SERVICE: nodeapp-service-${{steps.vars.outputs.stage}}
          ECS_SERVICE: nodeapp-service-alb-${{steps.vars.outputs.stage}}
          ECS_CLUSTER: jerrynode-${{steps.vars.outputs.stage}}
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.nodeapp-container-id.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
